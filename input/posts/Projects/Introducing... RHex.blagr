Title:Introducing... RHex
Author:rsaxvc
CreatedDateTime:2011-04-05T19:35:05
ModifiedDateTime:2011-04-17T14:18:30
Tag:Editors
Tag:Hex editor
Tag:Programming
Tag:Regular expression
---
What is RHex? Richard's Hexeditor - currently is a list of features I want in a hexeditor. Eventually, I would like to implement it, as it seems every hex editor is missing something I need. Currently I use hexedit and <a class="zem_slink" href="http://en.wikipedia.org/wiki/CodeWright" title="CodeWright" rel="wikipedia">codewright</a> as hexeditors. Here's what I want:<div><div><ul><li>Side-by-side text and hex display (almost all editors have this)</li><li>text <a class="zem_slink" href="http://en.wikipedia.org/wiki/Regular_expression" title="Regular expression" rel="wikipedia">regex</a>(most have this)</li><li>binary regex(some have this)</li><li>replace section with different size(few have this)</li><li>asynchronous editing(If I insert a byte into a 7 gig file, I don't want to wait for the rest of the file to be re-written)</li><li><a class="zem_slink" href="http://en.wikipedia.org/wiki/Libmagic" title="Libmagic" rel="wikipedia">libmagic</a> support(none I know of do this, also I want a mode where each byte is a possible start of magic)</li><li>scriptable file decoder(If I'm editing a JPEG, I want some color highlighted text for different areas)</li><li>big file support( &gt;4gig, but I'm not opposed to the 32 bit mode only supporting 2gig files or smaller)</li><li>variable sized groupings ( If I'm looking at a structure that consists of uint32s, I want the editor to reflect that), and...</li><li>offset groupings ( If I'm looking at a structure that consists of uint32s, but at an address not divisible by 4, I want the editor to reflect that )</li><li>reverse-endian groupings( If I'm looking at a structure that consists of uint32s, I want the ability to have the editor reverse the groups of bytes for user i/o)</li></ul><div>To implement this, I'd like to design it as a library for file editing. This file would be responsible for memory management and either threading, asio, or nonblocking i/o. Hopefully this way you could make a gui or console version without too much work. However, the lowest level has a lot of bookkeeping to do to allow asynchronous editing. I might want two modes, a 'safe mode' where the editor is writing a new version of the file and a 'live mode' where the editor is actively editing the file directly, probably through mmap(). Either way, it has to manage outstanding changes so that the editor is always presented with whatever it wrote into the hex library, and the library is trying to get it synced to disk quickly.</div></div></div><div><br /></div><div>Tough stuff, but manageable. If only I had time to write it.</div>
