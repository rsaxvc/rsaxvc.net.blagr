Title:A New Home
Author:rsaxvc
CreatedDateTime:2008-05-26T00:45:53
ModifiedDateTime:2008-05-26T00:45:53
Tag:solaris
Tag:sparc
Tag:sun
Tag:ubuntu
Tag:zfs
---
<span class="Apple-style-span" style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; white-space: pre-wrap; ">So, I finally broke down and purchased a new dns name, and put together an MT blog. It did take about 12 hours to install all the perl modules it wanted. I spent about six hours mostly working on robot code, and then pulling down a new perl module and building it whenever the terminal went inactive. After starting to build imagemagick, I realized that Solaris Make doesn't handle multiple cpus, not even when instructed to. So halfway through, I downloaded Stallman's GNU Make, built it, ran a make clean;make -j8 , and it was done in a few minutes. What's the point of Big Old Solaris Iron without multithreaded code?

As of this posting, the server hosting this is loaded with:</span><div><ul><li><span class="Apple-style-span" style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; white-space: pre-wrap; ">4x400 Mhz UltraSparcIIs (4mb cache)</span></li><li><span class="Apple-style-span" style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; white-space: pre-wrap; ">12x18GB(min) SCSI SCA drives (11 of which are in RAIDZ2)</span></li><li><span class="Apple-style-span" style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; white-space: pre-wrap; ">1792 MB RAM (ECC, informs you when sticks are dying)</span></li><li><span class="Apple-style-span" style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; white-space: pre-wrap; ">Solaris 10 (Ubuntu actually ran pretty well, and had graphics support for the CG4, but a bad SCSI driver destroyed the RAID5 after a few reboots-yay backups)</span></li><li><span class="Apple-style-span" style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; white-space: pre-wrap; ">Happy Meal Ethernet!</span></li></ul><span class="Apple-style-span" style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; white-space: pre-wrap; ">All being said, it makes a pretty stable and responsive webserver. Now if only we could get it off of that laggy shared T3. 

Now for a little history. Years ago, in the dark ages, there was a teacher named Fickret Ercal. Fickret had something to do with the school vision processing lab and was in charge of buying them a new system. He choose a then-$64,000 Sun server. Keep in mind that at this point in time, Sun was one of the few companies offering such power in such a small space. The only other possibilities were IBM/POWER, DEC/Alpha, and SGI/MIPS. Eventually, the machine was given to ACM, where it sat in the office for untold ages. Flash forward to last spring.

I was elected ACM server administrator for our local chapter. We had an Athlon XP running as the shell/webserver. Something happened and it started scanning the campus for SSH servers. Tim noticed it and disconnected it from the network. My roommate at the time, Doug Kelly, recommended Solaris and installed it on the old beast. Why Solaris? We really wanted RAIDZ/ZFS. I was willing to settle for Ubuntu, but it died after a few reboots and lost all of the hard drive labels for its software RAID5. No BSD supported RAIDZ on Big Endian at the time (FreeBSD does now, but it's an ugly hack). And so, only Solaris was left. It took a few tries to get all the configs set up. That and the fact that the expansion boards have to go into certain slots or they won't work. But eventually, a serial console came up, and it was installed. Next the old Athlon XP was set up with Debian and OpenAFS was used to communicate between them-11 hard drives on the Sun make a ZFS Zpool, which is exported under /afs/mstacm.org. Users can now login to acmshell.device.mst.edu, and edit the same files stored on acm.device.mst.edu. You can also go to here to learn about how to set up your personal computer to connect to our AFS space.

Overall, I'm pretty happy with the machine. It isn't blindly fast (except for access times), but it is rock solid. A few weeks ago the web pages started acting a little slow. The culprit? A bad hard drive says dmesg. The disk was audibly clinking as the head slammed across the drive. A few zpool commands and it was running fine again, just with degraded redundancy (equivalent to RAID5). When we got the new drive, a few more zpool commands and it was happily updating blocks and metadata from the other ten drives. Keep in mind that there was no reason for downtime in this period of time. When the drive went out, the webpages were slow only until cached. When the drive came out and the zpool was scrubbed, there was some high cpu usage, but when files were rechecked and marked as good, their access time/speed went back to normal. Replacing the disk was much the same. Hopefully we can get a bigger UPS for it and then there will be no more downtime. Right now, it's up between storms.

So you want to know why I'm pumped? Well, because the title to this post is one letter away from being a Star Wars title.</span></div> 
